{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL } from \"../../../auth/constants.ts\";\nexport const turnoService = {\n  fetchPeluqueros: async accessToken => {\n    var _response$data;\n    const response = await axios.get(`${API_URL}/peluqueros`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    const peluqueros = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || [];\n    return peluqueros;\n  },\n  fetchTiposServicios: async accessToken => {\n    var _response$data2;\n    const response = await axios.get(`${API_URL}/tiposervicio`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    const tiposServicios = ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data) || [];\n    return tiposServicios;\n  },\n  fetchHorarios: async (codigo_pelquuero, tipo_servicio_codigo, fechaHora, accessToken) => {\n    var _response$data3;\n    const response = await axios.get(`${API_URL}/peluqueros/horariosDisponibles/${codigo_pelquuero}/${tipo_servicio_codigo}`, {\n      params: {\n        fechaHora\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    const horariosDisponibles = ((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data) || [];\n    return horariosDisponibles;\n  },\n  confirmarTurno: async (payload, accessToken) => {\n    var _response$data4;\n    const response = await axios.post(`${API_URL}/turnos/altaTurno`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    return (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","turnoService","fetchPeluqueros","accessToken","_response$data","response","get","headers","Authorization","peluqueros","data","fetchTiposServicios","_response$data2","tiposServicios","fetchHorarios","codigo_pelquuero","tipo_servicio_codigo","fechaHora","_response$data3","params","horariosDisponibles","confirmarTurno","payload","_response$data4","post"],"sources":["C:/Users/pferr/TrabajoPracticoPeluqueria/CRUDFrontend/client/src/pages/AltaTurno/services/altaTurnoService.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_URL } from \"../../../auth/constants.ts\";\r\nimport { Payload } from \"../types/turno.types.ts\";\r\n\r\nexport const turnoService = {\r\n    fetchPeluqueros: async (accessToken:string) => {\r\n        const response = await axios.get(`${API_URL}/peluqueros`, {\r\n            headers: { Authorization: `Bearer ${accessToken}`}\r\n        })\r\n        const peluqueros = response.data?.data || [];\r\n        return peluqueros;\r\n    },\r\n\r\n    fetchTiposServicios: async (accessToken:string) => {\r\n        const response = await axios.get(`${API_URL}/tiposervicio`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        })\r\n        const tiposServicios = response.data?.data || [];\r\n        return tiposServicios;\r\n    },\r\n\r\n    fetchHorarios: async (\r\n        codigo_pelquuero: number,\r\n        tipo_servicio_codigo:number,\r\n        fechaHora: string,\r\n        accessToken:string\r\n    ) => {\r\n        const response = await axios.get(\r\n            `${API_URL}/peluqueros/horariosDisponibles/${codigo_pelquuero}/${tipo_servicio_codigo}`,\r\n            {\r\n                params: { fechaHora },\r\n                    headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${accessToken}`\r\n                }\r\n            }\r\n        );\r\n        const horariosDisponibles = response.data?.data || [];\r\n        return horariosDisponibles;\r\n    },\r\n\r\n    confirmarTurno: async (payload: Payload, accessToken: string) => {\r\n        const response = await axios.post(`${API_URL}/turnos/altaTurno`, payload,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${accessToken}`\r\n                }\r\n            }\r\n        );\r\n        return response.data?.data\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,4BAA4B;AAGpD,OAAO,MAAMC,YAAY,GAAG;EACxBC,eAAe,EAAE,MAAOC,WAAkB,IAAK;IAAA,IAAAC,cAAA;IAC3C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,aAAa,EAAE;MACtDO,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUL,WAAW;MAAE;IACrD,CAAC,CAAC;IACF,MAAMM,UAAU,GAAG,EAAAL,cAAA,GAAAC,QAAQ,CAACK,IAAI,cAAAN,cAAA,uBAAbA,cAAA,CAAeM,IAAI,KAAI,EAAE;IAC5C,OAAOD,UAAU;EACrB,CAAC;EAEDE,mBAAmB,EAAE,MAAOR,WAAkB,IAAK;IAAA,IAAAS,eAAA;IAC/C,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,eAAe,EAAE;MACxDO,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUL,WAAW;MACxC;IACJ,CAAC,CAAC;IACF,MAAMU,cAAc,GAAG,EAAAD,eAAA,GAAAP,QAAQ,CAACK,IAAI,cAAAE,eAAA,uBAAbA,eAAA,CAAeF,IAAI,KAAI,EAAE;IAChD,OAAOG,cAAc;EACzB,CAAC;EAEDC,aAAa,EAAE,MAAAA,CACXC,gBAAwB,EACxBC,oBAA2B,EAC3BC,SAAiB,EACjBd,WAAkB,KACjB;IAAA,IAAAe,eAAA;IACD,MAAMb,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAC5B,GAAGN,OAAO,mCAAmCe,gBAAgB,IAAIC,oBAAoB,EAAE,EACvF;MACIG,MAAM,EAAE;QAAEF;MAAU,CAAC;MACjBV,OAAO,EAAE;QACT,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUL,WAAW;MACxC;IACJ,CACJ,CAAC;IACD,MAAMiB,mBAAmB,GAAG,EAAAF,eAAA,GAAAb,QAAQ,CAACK,IAAI,cAAAQ,eAAA,uBAAbA,eAAA,CAAeR,IAAI,KAAI,EAAE;IACrD,OAAOU,mBAAmB;EAC9B,CAAC;EAEDC,cAAc,EAAE,MAAAA,CAAOC,OAAgB,EAAEnB,WAAmB,KAAK;IAAA,IAAAoB,eAAA;IAC7D,MAAMlB,QAAQ,GAAG,MAAMN,KAAK,CAACyB,IAAI,CAAC,GAAGxB,OAAO,mBAAmB,EAAEsB,OAAO,EACpE;MACIf,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUL,WAAW;MACxC;IACJ,CACJ,CAAC;IACD,QAAAoB,eAAA,GAAOlB,QAAQ,CAACK,IAAI,cAAAa,eAAA,uBAAbA,eAAA,CAAeb,IAAI;EAC9B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}