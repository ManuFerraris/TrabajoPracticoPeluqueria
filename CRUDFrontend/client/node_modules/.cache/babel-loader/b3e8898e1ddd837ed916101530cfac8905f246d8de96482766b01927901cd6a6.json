{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pferr\\\\TrabajoPracticoPeluqueria\\\\CRUDFrontend\\\\client\\\\src\\\\routes\\\\reset-password.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './reset-password.css'; // archivo CSS separado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [newPassword, setNewPassword] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const [error, setError] = useState('');\n  const [tokenValido, setTokenValido] = useState(null);\n  useEffect(() => {\n    const validarToken = async () => {\n      try {\n        await axios.get(`http://localhost:3000/api/auth/validate-reset-token?token=${token}`);\n        setTokenValido(true);\n      } catch (err) {\n        setTokenValido(false);\n        setError('Token inválido o expirado');\n      }\n    };\n    validarToken();\n  }, [token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      await axios.post('http://localhost:3000/api/auth/reset-password', {\n        token,\n        newPassword\n      });\n      setMensaje('Contraseña actualizada con éxito. Redirigiendo al login...');\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error al actualizar contraseña');\n    }\n  };\n  if (tokenValido === false) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: \"Token inv\\xE1lido o expirado\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 37\n  }, this);\n  if (tokenValido === null) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Restablecer Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nueva contrase\\xF1a:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cambiar contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje\",\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"FlSPd5eTp4gYymSvvoFNkcHShSM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","newPassword","setNewPassword","mensaje","setMensaje","error","setError","tokenValido","setTokenValido","validarToken","get","err","handleSubmit","e","preventDefault","post","setTimeout","_err$response","_err$response$data","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/pferr/TrabajoPracticoPeluqueria/CRUDFrontend/client/src/routes/reset-password.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './reset-password.css'; // archivo CSS separado\r\n\r\nconst ResetPassword = () => {\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [mensaje, setMensaje] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [tokenValido, setTokenValido] = useState<boolean | null>(null);\r\n\r\n  useEffect(() => {\r\n    const validarToken = async () => {\r\n      try {\r\n        await axios.get(`http://localhost:3000/api/auth/validate-reset-token?token=${token}`);\r\n        setTokenValido(true);\r\n      } catch (err: any) {\r\n        setTokenValido(false);\r\n        setError('Token inválido o expirado');\r\n      }\r\n    };\r\n\r\n    validarToken();\r\n  }, [token]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      await axios.post('http://localhost:3000/api/auth/reset-password', {\r\n        token,\r\n        newPassword,\r\n      });\r\n      setMensaje('Contraseña actualizada con éxito. Redirigiendo al login...');\r\n      setTimeout(() => navigate('/login'), 3000);\r\n    } catch (err: any) {\r\n      setError(err?.response?.data?.message || 'Error al actualizar contraseña');\r\n    }\r\n  };\r\n\r\n  if (tokenValido === false) return <p className=\"error\">Token inválido o expirado</p>;\r\n  if (tokenValido === null) return <p>Cargando...</p>;\r\n\r\n  return (\r\n    <div className=\"reset-container\">\r\n      <h2>Restablecer Contraseña</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Nueva contraseña:</label>\r\n        <input\r\n          type=\"password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Cambiar contraseña</button>\r\n      </form>\r\n      {mensaje && <p className=\"mensaje\">{mensaje}</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}