{"ast":null,"code":"import { loadStripe } from '@stripe/stripe-js';\nimport { API_URL } from '../../../auth/constants.ts';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\nexport function usePagoStripe() {\n  const pagarTurno = async (codTurno, metodo, accessToken) => {\n    try {\n      const response = await axios.post(`${API_URL}/pagos/realizarPago/${codTurno}/${metodo}`, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      console.log(\"Respuesta backend:\", response.data);\n      const {\n        sessionId\n      } = response.data;\n      const stripe = await stripePromise;\n      stripe === null || stripe === void 0 ? void 0 : stripe.redirectToCheckout({\n        sessionId\n      });\n    } catch (error) {\n      var _error$response$data$, _error$response, _error$response$data;\n      const mensajeBackend = (_error$response$data$ = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) !== null && _error$response$data$ !== void 0 ? _error$response$data$ : \"Error inesperado al pagar el turno.\";\n      console.error(\"Error al pagar:\", mensajeBackend);\n      Swal.fire({\n        icon: \"error\",\n        title: \"Error al pagar el turno\",\n        text: mensajeBackend,\n        confirmButtonText: \"Aceptar\"\n      });\n    }\n    ;\n  };\n  return {\n    pagarTurno\n  };\n}\n;","map":{"version":3,"names":["loadStripe","API_URL","axios","Swal","stripePromise","process","env","REACT_APP_STRIPE_PUBLIC_KEY","usePagoStripe","pagarTurno","codTurno","metodo","accessToken","response","post","headers","Authorization","console","log","data","sessionId","stripe","redirectToCheckout","error","_error$response$data$","_error$response","_error$response$data","mensajeBackend","message","fire","icon","title","text","confirmButtonText"],"sources":["C:/Users/pferr/TrabajoPracticoPeluqueria/CRUDFrontend/client/src/pages/Pagos/hooks/usePagoStripe.tsx"],"sourcesContent":["import { loadStripe } from '@stripe/stripe-js';\r\nimport { API_URL } from '../../../auth/constants.ts';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY!);\r\n\r\nexport function usePagoStripe () {\r\n    const pagarTurno = async (codTurno:number, metodo: string, accessToken:string) => {\r\n        try{\r\n            const response = await axios.post(`${API_URL}/pagos/realizarPago/${codTurno}/${metodo}`,\r\n                {}, \r\n                {\r\n                    headers: { Authorization: `Bearer ${accessToken}` }\r\n                }\r\n            );\r\n            console.log(\"Respuesta backend:\", response.data);\r\n            const { sessionId } = response.data;\r\n\r\n            const stripe = await stripePromise;\r\n            stripe?.redirectToCheckout({ sessionId });\r\n        }catch(error:any){\r\n            const mensajeBackend = error.response?.data?.message ?? \"Error inesperado al pagar el turno.\";\r\n            console.error(\"Error al pagar:\", mensajeBackend);\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Error al pagar el turno\",\r\n                text: mensajeBackend,\r\n                confirmButtonText: \"Aceptar\"\r\n            });\r\n        };\r\n    };\r\n    return { pagarTurno };\r\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAE9B,MAAMC,aAAa,GAAGJ,UAAU,CAACK,OAAO,CAACC,GAAG,CAACC,2BAA4B,CAAC;AAE1E,OAAO,SAASC,aAAaA,CAAA,EAAI;EAC7B,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAe,EAAEC,MAAc,EAAEC,WAAkB,KAAK;IAC9E,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGb,OAAO,uBAAuBS,QAAQ,IAAIC,MAAM,EAAE,EACnF,CAAC,CAAC,EACF;QACII,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,WAAW;QAAG;MACtD,CACJ,CAAC;MACDK,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,QAAQ,CAACM,IAAI,CAAC;MAChD,MAAM;QAAEC;MAAU,CAAC,GAAGP,QAAQ,CAACM,IAAI;MAEnC,MAAME,MAAM,GAAG,MAAMjB,aAAa;MAClCiB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,kBAAkB,CAAC;QAAEF;MAAU,CAAC,CAAC;IAC7C,CAAC,QAAMG,KAAS,EAAC;MAAA,IAAAC,qBAAA,EAAAC,eAAA,EAAAC,oBAAA;MACb,MAAMC,cAAc,IAAAH,qBAAA,IAAAC,eAAA,GAAGF,KAAK,CAACV,QAAQ,cAAAY,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBN,IAAI,cAAAO,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,qCAAqC;MAC7FP,OAAO,CAACM,KAAK,CAAC,iBAAiB,EAAEI,cAAc,CAAC;MAChDxB,IAAI,CAAC0B,IAAI,CAAC;QACNC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,yBAAyB;QAChCC,IAAI,EAAEL,cAAc;QACpBM,iBAAiB,EAAE;MACvB,CAAC,CAAC;IACN;IAAC;EACL,CAAC;EACD,OAAO;IAAExB;EAAW,CAAC;AACzB;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}